{
  "name": "@sparesparrow/mcp-prompts",
  "version": "1.2.43",
  "description": "An MCP server for managing and providing prompts and prompt templates",
  "type": "module",
  "bin": {
    "mcp-prompts": "dist/index.js"
  },
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "tsc && shx chmod +x dist/*.js dist/scripts/*.js",
    "prepare": "npm run build",
    "watch": "tsc --watch",
    "clean": "rimraf dist",
    "start": "node dist/scripts/start-server.js",
    "dev": "ts-node --esm src/scripts/start-server.ts",
    "test:sse": "node dist/scripts/sse-test.js",
    "validate:json": "node dist/scripts/validate-json.js",
    "fix:prompt-json": "node dist/scripts/fix-prompt-json.js",
    "fix:esm": "node dist/scripts/fix-esm.js",
    "test": "node --experimental-vm-modules node_modules/jest/bin/jest.js",
    "test:watch": "node --experimental-vm-modules node_modules/jest/bin/jest.js --watch",
    "test:coverage": "node --experimental-vm-modules node_modules/jest/bin/jest.js --coverage",
    "test:integration": "node --experimental-vm-modules node_modules/jest/bin/jest.js --testRegex=\"(/__tests__/.*|(\\.|/)(integration|e2e))\\.(test|spec)\\.tsx?$\"",
    "test:unit": "node --experimental-vm-modules node_modules/jest/bin/jest.js --testRegex=\"(/__tests__/.*|(\\.|/)(unit))\\.(test|spec)\\.tsx?$\"",
    "test:docker": "docker compose -f docker-compose.yml -f docker/docker-compose.test.yml up --build --abort-on-container-exit",
    "test:docker:health": "docker compose -f docker-compose.yml -f docker/docker-compose.test.yml --profile health-check up --build --abort-on-container-exit",
    "test:docker:all": "docker compose -f docker-compose.yml -f docker/docker-compose.test.yml up --build --abort-on-container-exit",
    "test:docker:unit": "./scripts/run-docker-tests.sh --unit --clean",
    "test:docker:integration": "./scripts/run-docker-tests.sh --integration --clean",
    "test:docker:coverage": "./scripts/run-docker-tests.sh --all --coverage --clean",
    "test:docker:postgres": "DOCKER_TEST=true PG_HOST=localhost PG_PORT=5442 PG_USER=postgres PG_PASSWORD=postgres PG_DATABASE=mcp_prompts node --experimental-vm-modules node_modules/jest/bin/jest.js tests/integration/postgres-adapter.integration.test.ts",
    "test:build": "npm run build && node dist/index.js --version",
    "test:inspector": "npx @modelcontextprotocol/inspector node dist/index.js",
    "docker:build": "scripts/build-and-push-docker.sh",
    "docker:push": "scripts/build-and-push-docker.sh",
    "docker:run:sse": "docker run --rm -p 3003:3003 -v $(pwd)/data/prompts:/app/data/prompts -v $(pwd)/data/backups:/app/data/backups --name mcp-prompts-sse -e STORAGE_TYPE=file -e PROMPTS_DIR=/app/data/prompts -e BACKUPS_DIR=/app/data/backups -e HTTP_SERVER=true -e PORT=3003 -e HOST=0.0.0.0 -e ENABLE_SSE=true -e SSE_PATH=/events -e CORS_ORIGIN=* sparesparrow/mcp-prompts:latest",
    "setup:claude": "scripts/setup-claude-desktop.sh",
    "docker:up": "docker compose up -d",
    "docker:down": "docker compose down",
    "docker:dev:up": "docker compose -f docker-compose.yml -f docker/docker-compose.dev.yml up -d",
    "docker:dev:down": "docker compose -f docker-compose.yml -f docker/docker-compose.dev.yml down",
    "docker:test:up": "docker compose -f docker-compose.yml -f docker/docker-compose.test.yml up -d",
    "docker:test:down": "docker compose -f docker-compose.yml -f docker/docker-compose.test.yml down",
    "docker:integration:up": "docker compose -f docker-compose.yml -f docker/docker-compose.integration.yml up -d",
    "docker:integration:down": "docker compose -f docker-compose.yml -f docker/docker-compose.integration.yml down",
    "docker:pgai:up": "docker compose -f docker-compose.yml -f docker/docker-compose.pgai.yml up -d",
    "docker:pgai:down": "docker compose -f docker-compose.yml -f docker/docker-compose.pgai.yml down",
    "docker:network:fix": "sudo ./docker/scripts/apply-docker-config.sh",
    "docker:cleanup": "./docker/scripts/cleanup-docker-files.sh",
    "docker:postgres:up": "docker compose -f docker-compose.yml -f docker/docker-compose.postgres.yml up -d",
    "docker:postgres:down": "docker compose -f docker-compose.yml -f docker/docker-compose.postgres.yml down",
    "docker:publish:all": "./docker/scripts/publish-images.sh",
    "docker:consolidate": "./docker/scripts/consolidate-docker.sh",
    "publish:patch": "./scripts/publish.sh patch",
    "publish:minor": "./scripts/publish.sh minor",
    "publish:major": "./scripts/publish.sh major",
    "release:patch": "./scripts/release.sh --version patch --publish",
    "release:minor": "./scripts/release.sh --version minor --publish",
    "release:major": "./scripts/release.sh --version major --publish",
    "release:docker": "./scripts/release.sh --version patch --publish --docker",
    "scripts:move-to-ts": "node dist/scripts/consolidate-scripts.js"
  },
  "keywords": [
    "mcp",
    "prompt",
    "template",
    "llm"
  ],
  "author": "sparesparrow",
  "license": "MIT",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.7.0",
    "@modelcontextprotocol/server-postgres": "0.6.2",
    "@sparesparrow/mcp-prompts": "^1.2.42",
    "cors": "^2.8.5",
    "eventsource": "^3.0.5",
    "express": "^5.0.1",
    "ws": "^8.18.1",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/cors": "^2.8.17",
    "@types/eventsource": "^1.1.15",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.14",
    "@types/pg": "^8.11.10",
    "@types/supertest": "^6.0.2",
    "@types/ws": "^8.5.10",
    "jest": "^29.7.0",
    "rimraf": "^5.0.5",
    "shx": "^0.3.4",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.6",
    "typescript": "^5.6.2"
  },
  "resolutions": {
    "@modelcontextprotocol/sdk": "1.7.0"
  }
}
